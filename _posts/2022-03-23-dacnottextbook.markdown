---
layout: post
title:  "분할정복 알고리즘 교재에 없는것"
date:   2022-03-23 17:09:00 +0900
categories: jekyll update	
---

# 1.분할정복 설계
### 1.원래 문제가 분할하여 비슷한 유형의 더 작은 하위 문제로 분할이 가능할 때 까지 나눈다.
### 2.각 하위 문제를 재귀적으로 해결한다. 하위 문제의 규모가 나눌 수 없는 단위가 되면 탈출 조건을 설정하고 해결한다.
### 3. Conquer한 문제들을 통합하여 원래 문제의 답을 얻어 해결한다.   
* 분할정복에 대한 그림
![](https://blog.kakaocdn.net/dn/1jaZt/btrd1xZC9sT/BZy2RklFUqqUhS1AuCJxW1/img.png)
# 2.분할정보 특징 및 장단점
### 장점
* Top-down 재귀방식으로 구현하기 때문에 코드가 직관적이다.
*  문제를 나누어 해결한다는 특징상 병렬적으로 문제를 해결할 수 있다.

### 단점
* 재귀 함수 호츨로 오버헤드가 발생할 수 있다. 
* 스택에 다량의 데이터가 보관되는 경우 오버플로우가 발생할 수 있다.

# 3.이진탐색이란?
### 1.정의: 정렬된 데이터를 효과적으로 탐색할 수 있는 방법이다. (정렬된 데이터만 사용 가능)

![](https://blog.kakaocdn.net/dn/QoiMc/btrhWJ1MqWU/yRql7DQBuH7XhurceKR020/img.png)
### 2.동작과정
#### 1.배열의 가운데 원소를 기준으로 왼쪽, 오른쪽 부분배열로 분할한다. 탐색키와 가운데 원소가 같으면 분할을 종료한다.
#### 2.탐색키가 가운데 원소보다 작으면 왼쪽 부분배열을 대상으로 이진 탐색을 순환 호출하고, 크면 오른쪽 부분배열을 대상으로 이진 탐색을 호출한다.
#### 3.탐색 결과가 직접 반환되므로 결합이 불필요하다.